{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CroppedTextPipe {\n  transform(value, limit) {\n    return value.length >= limit ? `${value.slice(0, limit)}...` : value;\n  }\n  static #_ = this.ɵfac = function CroppedTextPipe_Factory(t) {\n    return new (t || CroppedTextPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"cropped\",\n    type: CroppedTextPipe,\n    pure: true,\n    standalone: true\n  });\n}","map":{"version":3,"names":["CroppedTextPipe","transform","value","limit","length","slice","_","_2","pure","standalone"],"sources":["/home/user/Documents/Pets/news-dashboard/src/app/pipes/cropped-text.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n    name: \"cropped\",\n     standalone: true,\n})\n\nexport class CroppedTextPipe implements PipeTransform {\n    transform(value: string, limit: number) {\n        return value.length >= limit ? `${value.slice(0, limit)}...` : value;\n    }\n    \n}"],"mappings":";AAOA,OAAM,MAAOA,eAAe;EACxBC,SAASA,CAACC,KAAa,EAAEC,KAAa;IAClC,OAAOD,KAAK,CAACE,MAAM,IAAID,KAAK,GAAG,GAAGD,KAAK,CAACG,KAAK,CAAC,CAAC,EAAEF,KAAK,CAAC,KAAK,GAAGD,KAAK;EACxE;EAAC,QAAAI,CAAA,G;qBAHQN,eAAe;EAAA;EAAA,QAAAO,EAAA,G;;UAAfP,eAAe;IAAAQ,IAAA;IAAAC,UAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}