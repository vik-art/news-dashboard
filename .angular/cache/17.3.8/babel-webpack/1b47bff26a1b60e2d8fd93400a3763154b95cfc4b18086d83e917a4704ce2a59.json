{"ast":null,"code":"import { HttpClient, HttpParams } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { endPoints } from './ENDPOINTS';\nimport * as i0 from \"@angular/core\";\nexport class ArticlesService {\n  constructor() {\n    this.http = inject(HttpClient);\n  }\n  getAllArticles() {\n    const url = `${environment.newsAPI}${endPoints.ALL_ARTICLES}`;\n    const today = new Date();\n    const formattedDate = `${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`;\n    console.log(formattedDate);\n    return this.http.get(url, {\n      params: new HttpParams().set(`api-key`, environment.newsAPIkey).set(`source-country`, 'us').set('language', 'en')\n    });\n  }\n  static #_ = this.ɵfac = function ArticlesService_Factory(t) {\n    return new (t || ArticlesService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ArticlesService,\n    factory: ArticlesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpClient","HttpParams","inject","environment","endPoints","ArticlesService","constructor","http","getAllArticles","url","newsAPI","ALL_ARTICLES","today","Date","formattedDate","getFullYear","getMonth","getDate","console","log","get","params","set","newsAPIkey","_","_2","factory","ɵfac","providedIn"],"sources":["/home/user/Documents/Pets/news-dashboard/src/app/services/articles.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable, inject } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { endPoints } from './ENDPOINTS';\nimport { Observable } from 'rxjs';\nimport { HttpArticlesResponse } from '../types/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticlesService {\n\n  private http = inject(HttpClient);\n\n  getAllArticles(): Observable<HttpArticlesResponse> {\n    const url = `${environment.newsAPI}${endPoints.ALL_ARTICLES}`;\n    const today = new Date();\n    const formattedDate = `${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`;\n    console.log(formattedDate);\n    return this.http.get<HttpArticlesResponse>(url, {\n      params: new HttpParams().set(`api-key`, environment.newsAPIkey).set(`source-country`, 'us').set('language', 'en')\n    });\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,UAAU,QAAQ,sBAAsB;AAC7D,SAAqBC,MAAM,QAAQ,eAAe;AAClD,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,SAAS,QAAQ,aAAa;;AAOvC,OAAM,MAAOC,eAAe;EAH5BC,YAAA;IAKU,KAAAC,IAAI,GAAGL,MAAM,CAACF,UAAU,CAAC;;EAEjCQ,cAAcA,CAAA;IACZ,MAAMC,GAAG,GAAG,GAAGN,WAAW,CAACO,OAAO,GAAGN,SAAS,CAACO,YAAY,EAAE;IAC7D,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;IACxB,MAAMC,aAAa,GAAG,GAAGF,KAAK,CAACG,WAAW,EAAE,IAAIH,KAAK,CAACI,QAAQ,EAAE,IAAIJ,KAAK,CAACK,OAAO,EAAE,EAAE;IACrFC,OAAO,CAACC,GAAG,CAACL,aAAa,CAAC;IAC1B,OAAO,IAAI,CAACP,IAAI,CAACa,GAAG,CAAuBX,GAAG,EAAE;MAC9CY,MAAM,EAAE,IAAIpB,UAAU,EAAE,CAACqB,GAAG,CAAC,SAAS,EAAEnB,WAAW,CAACoB,UAAU,CAAC,CAACD,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAACA,GAAG,CAAC,UAAU,EAAE,IAAI;KACjH,CAAC;EACJ;EAAC,QAAAE,CAAA,G;qBAZUnB,eAAe;EAAA;EAAA,QAAAoB,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}